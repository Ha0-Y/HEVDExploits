#pragma once

#include "utils.hpp"

#define IOCTL_STACK_OVERFLOW_GS		0x222007
#define IOCTL_WHAT_TO_WHERE			0x22200B

typedef struct _WHAT_WHERE {
	union {
		DWORD64 Write;
		DWORD64 Read;
	} What;

	union {
		DWORD64 InValue;
		DWORD64 OutValue;
	} Where;
} WHAT_WHERE;

typedef enum _SYSTEM_INFORMATION_CLASS {
	SystemExtendedProcessInformation = 0x39
} SYSTEM_INFORMATION_CLASS;

typedef struct _STACK {
	DWORD64 StackBase;
	DWORD64 StackLimit;
}STACK, *PSTACK;

// NtQuerySystemInfomation
typedef NTSTATUS(WINAPI* PNtQuerySystemInformation) (
	_In_        SYSTEM_INFORMATION_CLASS SystemInformationClass,
	_Inout_     PVOID                    SystemInformation,
	_In_        ULONG                    SystemInformationLength,
	_Out_opt_	PULONG                   ReturnLength
);

typedef VOID(NTAPI* PRtlInitUnicodeString) (
	PUNICODE_STRING DestinationString,
	PCWSTR			SourceString
);

typedef BOOLEAN(WINAPI* PRtlEqualUnicodeString)(
	PCUNICODE_STRING String1,
	PCUNICODE_STRING String2,
	BOOLEAN          CaseInSensitive
);

PSTACK GetStackInformation(PSTACK pStack);

DWORD64 GetStackCookie();

DWORD64 ReadWhere(WHAT_WHERE& ww);

VOID WriteWhere(WHAT_WHERE& ww);

VOID StackOverflowGSExploit();